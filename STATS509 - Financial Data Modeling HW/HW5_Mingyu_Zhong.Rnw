\documentclass[11pt]{article}

\usepackage[colorlinks=true]{hyperref} 
\usepackage{amsmath,amsfonts,fullpage}
\def\E{\mathbb E}
\def\R{\mathbb R}
\def\P{\mathbb P}
\def\what{\widehat}
\def\wtilde{\widetilde}

\begin{document}
<<Homework,include=FALSE>>=
HW.number = 5
Due.date  = "April 6, 2023"
@

<<setup, include=FALSE>>=
library(knitr)
opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
@
\centerline{\Large Homework \Sexpr{HW.number} }

\medskip
\centerline{ Due on \Sexpr{Due.date} }

\medskip\noindent
{\bf Instructions:} 
\begin{itemize}
\item Install {\tt pdflatex}, {\tt R}, and 
{\tt RStudio} on your computer.
\item 
Please edit the {\tt HW\Sexpr{HW.number}\_First\_Last.Rnw} file 
in {\tt Rstudio} and compile with {\tt knitr} instead of {\tt Sweave}. 
Go to the menu {\tt RStudio|Preferences...|Sweave} choose the 
{\tt knitr} option, i.e., {\tt Weave Rnw files using knitr?}
You may have to install {\tt knitr} and other necessary packages.  

\item 
Replace "First" and "Last" in the file-name with your first and last names,
respectively. Complete your assignment by modifying and/or adding necessary 
R-code in the text below. 

\item You should submit both a {\bf PDF file} and a {\bf ZIP file} containing the
data and the 
{\em HW\Sexpr{HW.number}\_First\_Last.Rnw} file required to produce the PDF.
The file should be named "HW\Sexpr{HW.number}\_First\_Last.zip" and it 
should contain a single 
folder named "First\_Last" with all the necessary data files, the 
{\tt HW\Sexpr{HW.number}\_First\_Last.Rnw} and
{\tt HW\Sexpr{HW.number}\_First\_Last.pdf} file, which 
was obtained from compiling {\tt HW\Sexpr{HW.number}\_First\_Last.Rnw} with {\tt knitr}
and \LaTeX.

\item The GSI grader will annotate the PDF file you submit.  However, they will also 
check if the code you provide in the ZIP file compiles correctly. If the file fails to 
compile due to errors other than missing
packages, there will be an automatic 10\% deduction to your score. 

\end{itemize}

{\bf \Large Problems:}

\begin{enumerate}
 
\item Consider the Dow Jones data set provided in the
file \texttt{DowJones30.csv} under the textbook data sets folder in
Canvas.  The data set is also available
\href{https://www.dropbox.com/s/vzd2sh68ipsipui/DowJones30.csv?dl=0}{here}.  

{\bf (a)} Consider the vectors of daily log-returns of all 30 stocks 
$$
 r_k,\ k=1,\dots, 2529
$$
over the period of 10 years from 1990 through 2000. Model the joint distribution 
of the daily log-returns with a multivariate $t-$distribution with mean 
$\mu$ and covariance matrix $\Sigma$.  More precisely,
$$
r_k \stackrel{d}{=} \mu + T,\ \ \mbox{ with }T = \frac{X}{\sqrt{Y/\nu}}, 
$$
where $X \sim {\cal N}(0,\Lambda = \Sigma\times (\nu-2)/\nu)$ and
$Y\sim {\rm Gamma}(\nu/2,1/2)$ are independent.

Fit this model to the data. Assuming that $\nu>2$, estimate $\Lambda$ by using the sample 
covariance of the data and use the method of profile likelihood to estimate $\nu$.



{\em Hint:} Use the package \texttt{mnormt} for the function \texttt{dmt}, which computes
the density of a multivariate $t$-distribution with specified mean and shape matrix $\Lambda$.
You can modify and complete the following code.
<<profile,include=T>>=
library("mnormt")
t.loglike = function(dat,nu.range){
  mu = apply(dat,2,mean);
  Sig = cov(dat);
  t.loglike = matrix(0,nrow=1,ncol=length(nu.range));
  for (i in 1:length(nu.range)){
   nu = nu.range[i];
   t.loglike[1,i] = sum(log(dmt(dat,mean=mu, S = Sig/(nu/(nu-2)), df=nu)));
  }
  return(t.loglike);
}
dat = read.csv("DowJones30.csv",head=T);
n = length(dat$AA);
x = unlist(dat);
x = matrix(as.numeric(x[-(1:n)]),nrow=n,ncol=30);
ret = log(x[-1,]/x[-n,]);
nu.range = seq(from=2.01,to=10,by=0.01);
## Complete or correct the above code.
pll = t.loglike(ret, nu.range)
max.index = which.max(pll)
nu.mle = nu.range[max.index];nu.mle
# plot(nu.range, pll, type = "l")
@

The MLE of $\nu$ based on profile likelihood is $7.25$. 


{\bf (b)} Using the method of profile likelihood, obtain an asymptotic 
95\%-confidence interval for the parameter $\nu$. 

<<p1b>>=
alpha = 0.05; q.alpha = qchisq(1-alpha,1);
th = 2*max(pll) - q.alpha
csd = 2*pll
nu.greater = nu.range[csd > th]
CI.95 = c(min(nu.greater), max(nu.greater))
@

An asymptotic 95\% confidence interval for the parameter $\nu$ is (6.92, 7.60).


{\bf (c)} Compute the daily Value-at-Risk at level $\alpha = 0.95$ for the 
equal-weighted portfolio including all 30 stocks and using the model-fit in 
part {\bf (a)}, obtain  $VaR_{0.95}$, so that
$$
\P( r < -VaR_{0.95}) =0.05,
$$
where $r$ denotes log-return on this portfolio. 

<<p1c>>=
library(mvtnorm)
library(tidyverse)
nu.mle = nu.range[max.index]

plr  =  rowMeans(ret)
p_mu  =  mean(plr)
w  =  rep(1/30, 30)
p_var = t(w) %*% cov(ret) %*% w / (nu.mle/(nu.mle-2))

VaR = -1 * (qt(0.05, nu.mle)*sqrt(p_var[1,1]) + p_mu) %>% as.numeric();VaR

length(plr[plr< -VaR])/ length(plr)
@

From the above computation, $VaR_{0.95}$ is 0.01487999.

Also, it is verified that $P(r < -VaR_{0.95})=0.04905 \approx 0.05$. 





\newpage


\item Consider the data set from the previous problem. 
Assume that the vector of daily log-returns $r \stackrel{d}=\mu + T$,
where $\mu = \overline r$ is the vector of sample means and $T$ is
distributed according to the $t$-distribution found in the previous problem.\\

{\bf (a)} Given a target expected daily return level $v$, determine the 
portflio weights $w_i,\ i=1,\dots,30$ such that $\sum_{i=1}^{30} w_i =1$, which
{\em minimize} VaR$_{0.95}$ of the portfolio return
$$
r(w):= w_1 r_1 + \cdots + w_{30} r_{30},
$$
where $r_i$ is the daily log-return of the $i$th stock in DJIA.
Write an $R$-function that returns the optimal portfolio weights
given a value for the target expected return.

{\bf How do the optimal portfolio weights for a given target expected return 
depend on the VaR level $\alpha$?  Explain.}\\

{\em Hint:}  In part {\bf (a)} observe that
\begin{align*}
r(w) & \stackrel{d}{=} w^\top \mu + w^\top X /\sqrt{Y/\nu} \\
 & \stackrel{d}{=} w^\top \mu + (w^\top \Lambda w)^{1/2} T_\nu,
\end{align*}
where $T_\nu$ is a $t$-distributed scalar random variable with $\nu$ degrees of freedom.
Use this fact to show that
\begin{equation}\label{e:VaR}
VaR_{\alpha} = -w^\top \mu - (w^\top \Lambda w)^{1/2} q_{1-\alpha}(\nu),
\end{equation}
where $q_{1-\alpha}(\nu)$ is the $1-\alpha$ quantile of
the $t-$distribution with $\nu$ degrees of freedom, i.e., 
$\P(T_\nu \le q_{1-\alpha}(\nu)) =1-\alpha.$

Formulate the above optimization problem as a quadratic program with linear constraints.
Use the function \texttt{solve.QP} in package \texttt{quadprog} to obtain a numerical solution.

%
% You may need to modify "eval=FALSE" to "eval=TRUE" when you are
% ready to complete the following R-chunk.
%
<<optim var, include=T>>=
mu <- matrix(apply(ret,2,mean),nrow=30,ncol=1);
Lambda <- cov(ret) * (nu.mle-2) / nu.mle;
q <- qt(0.05,6)
mu_f = log(1.03)/365;
library("quadprog");
vs = seq(from=0.001,to=0.65,by=0.001)/365;
sig = matrix(0,nrow=length(vs),ncol=1);
weights = matrix(0,nrow=length(vs),ncol=30);
eig = eigen(cov(ret))
D = diag(eig$values)
V = eig$vectors

optimal_weight = function(vs, dat){
  eig = eigen(dat)
  D = diag(eig$values)
  V = eig$vectors
  for (i in (1:length(vs))){
    v = vs[i]; 
    Amat = t(rbind(t(mu)%*% V, rep(1, nrow(V)) %*% V))
    # print(dim(Amat
    bvec = c(v, 1)
    dvec = t(t(V) %*% mu)
    # print(dim(dvec))
    Dmat = -2*D^(1/2) * q
    # print(dim(Dmat))
    res = solve.QP(Dmat, dvec, Amat, bvec, meq = 2)
    sig[i] = sqrt(res$value);
    weights[i,] = res$solution;
  }
  w = weights %*% t(V)
  return(list(w, sig))
}
@



{\bf (b)} Using the function in part {\bf (a)} compute the efficient frontier of
portfolios corresponding to several target daily log-return levels
$v=0.001/365$ to $v=0.65/365$. Graph the points $(SD(r(w)),\E (r(w)))$, 
corresponding to these portfolia. That is, produce a risk-reward diagram for 
the portfolios, where $SD(r(w))$ and $\E(r(w))$ denote the standard deviation 
and expectation of the returns, respectively. Assuming that the 
{\bf yearly} risk-free interest rate is $\mu_{F} = 0.03$, determine the ``tangency" portfolio, 
i.e., the one maximizing the Sharpe ratio $(\E r(w)-\mu_{F})/SD(r(w)).$ 
(Note: remember to work in the correct units -- i.e. determine the {\bf daily} risk-free rate. You
may also have to find an appropriate range of target expected returns in order to find the global 
maximum of the Sharpe ratio.)

<<p2b>>=
res.b = optimal_weight(vs, Lambda)
weight.b = res.b[[1]]
sig = res.b[[2]]
plot(sig, vs, type = "l")

sharpe.ratio = (vs - mu_f) / sig
max.idx = which.max(sharpe.ratio)
abline(mu_f, sharpe.ratio[max.idx], col = "red")
@



{\bf (c)} Repeat part {\bf (b)} with a suitably chosen range of target expected returns
under the condition that no short-selling is allowed (i.e., the weights are all non-negative). 
Comment on the optimal portfolio weights in the two cases, i.e., with and without short-selling.  
Is the expected return in part {\bf (b)} sustainable/reasonable? 

<<p2c>>=
library("quadprog");
# vs = seq(from=0.001,to=0.65,by=0.001)/365;
sig = matrix(0,nrow=length(vs),ncol=1);
weights = matrix(0,nrow=length(vs),ncol=30);

eig = eigen(Lambda)
D = diag(eig$values)
V = eig$vectors
for (i in (1:length(vs))){
  v = vs[i]; 
  Amat = t(rbind(t(mu)%*% V, rep(1, nrow(V)) %*% V, V))
  bvec = c(v, 1, rep(0, nrow(V)))
  dvec = t(t(V) %*% mu)
  Dmat = -2*D^(1/2) * q
  res = solve.QP(Dmat, dvec, Amat, bvec, meq = 2)
  sig[i] = sqrt(res$value);
  weights[i,] = res$solution;
}
weight.c = weights %*% t(V)


par(mfrow = c(3,3))
for(i in 1:ncol(weight.b)){
  plot(vs, weight.b[,i], type="l", 
       ylim = c(min(weight.b[,i], weight.c[,i]),
                max(weight.b[,i], weight.c[,i])))
  lines(vs, weight.c[,i], col = "red")
}

weight.b[weight.b >0] = 0
borrow.b = apply(weight.b, 1, sum) * -1
weight.c[weight.c >0] = 0
borrow.c = apply(weight.c, 1, sum) * -1
par(mfrow = c(1, 1))
plot(vs, borrow.b, 
     main = "Amount of ShortSelling in terms of Income Percentage", 
     type = "l")
lines(vs, borrow.c, col = "red")
@

The red line corresponds to the weights in part (c) which prohibits short selling, and the black line corresponds to the weights in part (b) which allows  short selling.

From the weights comparison, we can see that all the weights in part (b) has a perfect linear relationship with the target expected returns and the weights in part (c) has a non linear relationship with the target expected returns. 

The expected return in part (b) is not reasonable since we have to increase the amount of short selling as the target expected returns increases. Even for the low target expected returns, the optimal weights in part (b) still will short sell more than 40\% of the income which is unreasonable since it is obtainable without any short sell as shown in part (c). Also, the target daily return is not feasible without short selling when it exceeds 0.00130411 as shown in part (c). 


\newpage
\item Problem 6 on page 513 of the textbook \href{https://www.dropbox.com/s/0p7sz2oi0mgf7zn/Ruppert_Matheson_Statistics%20and%20Data%20Analysis%20for%20Financial%20Engineering.pdf?dl=0}{(link to the textbook)}.

(a)
\begin{align*}
    \beta_{Stock A} &= \frac{Cov(R_j,R_m)}{Var(R_M)}\\
    &= \frac{0.0165}{0.11^2}\\
    &= 1.36364
\end{align*}

\medskip

(b)
\begin{align*}
    \mu_j &= \mu_F + \beta_j(\mu_M - \mu_F)\\
    &= 0.04 + 1.36364(0.12-0.04)\\
    &= 0.14909
\end{align*}

\medskip

(c)
\begin{align*}
    \frac{1.36364^2*0.11^2}{0.022+1.36364^2*0.11^2} = 0.50562
\end{align*}






\newpage
\item Problem 7 on page 513 of the textbook.


(a)
\begin{align*}
    \beta &= (1/3) * \beta_1 + (1/3) * \beta_2 + (1/3) * \beta_3\\
    \beta &= (1/3) * 0.9 + (1/3) * 1.1 + (1/3) * 0.6\\
    \beta &= 0.86667
\end{align*}

\medskip
(b)
Note that $Var(R_i) = \beta_i^2 \sigma_M^2 + \sigma_{\epsilon,i}$ and $Cov(R_i,R_j) = \beta_i\beta_j\sigma_M^2$.

\begin{align*}
    Var(R_p) &= Var(\frac{1}{3}(R_1+R_2+R_3))\\
    &= \frac{1}{9}(Var(R_1)+Var(R_2)+Var(R_3)+2Cov(R_1,R_2)+2Cov(R_1,R_3)+2Cov(R_2,R_3))\\
    &= \frac{1}{9}(\beta_1^2 \sigma_M^2 + \sigma_{\epsilon,1}^2+\beta_2^2 \sigma_M^2 + \sigma_{\epsilon,2}^2+\beta_3^2 \sigma_M^2 + \sigma_{\epsilon,3}^2+2\beta_1\beta_2\sigma_M^2+2\beta_1\beta_3\sigma_M^2+2\beta_2\beta_3\sigma_M^2)\\
    &= \frac{1}{9}(\sigma_M^2 (\beta_1^2 +\beta_2^2+ \beta_3^2  +2\beta_1\beta_2+2\beta_1\beta_3+2\beta_2\beta_3)+\sigma_{\epsilon,1}^2+\sigma_{\epsilon,2}^2+ \sigma_{\epsilon,3}^2)\\
    &= \frac{1}{9}(\sigma_M^2 (\beta_1 +\beta_2+ \beta_3)^2+\sigma_{\epsilon,1}^2+\sigma_{\epsilon,2}^2+ \sigma_{\epsilon,3}^2)\\
    &= \frac{1}{9}(0.014 (0.9 +1.1+ 0.6)^2+0.010+0.015+ 0.011)\\
    &= 0.01452
\end{align*}

\medskip

(c)
The proportion of the total risk of asset 1 is due to market risk is 
$\beta_1^2\sigma_M^2 / (\beta_1^2\sigma_M^2 +\sigma_{\epsilon,1}^2) = 0.9^2 * 0.014 / (0.9^2 *0.014 + 0.010)=0.5314$






\newpage
\item Problem 2 on page 356 in the textbook (read Problem 1 terein on how to get the data).

(a)

<<p5a>>=
library(Ecdat)
data(CRSPday)
crsp=CRSPday[,7]
ar1 = arima(crsp,order=c(1,0,0))
ar2 = arima(crsp,order=c(2,0,0))
# print(ar1)
# print(ar2)

par(mfrow = c(2,2))
ts.plot(residuals(ar1))
acf(residuals(ar1))
ts.plot(residuals(ar2))
acf(residuals(ar2))
Box.test(residuals(ar1), lag=10,type="Ljung-Box")
Box.test(residuals(ar2), lag=10,type="Ljung-Box")

mp = cbind(AR1 = c(ar1$aic, BIC(ar1)), AR2 = c(ar2$aic, BIC(ar2)))
rownames(mp) = c("AIC","BIC")
knitr::kable(mp)
@

From the Ljung-Box test, we fail to reject the null hypothesis that $\rho(1)=\dots = \rho(10) =0$ for both models at the general $\alpha = 0.05$ significance level. 

From the residual plots, the residuals for both plot look like white noise which suggest both are good models.

However, regarding AIC and BIC, AR(2) model has lower values which is prefered over AR(1) model.

\medskip

(b)

<<>>=
q = qt(1 - 0.05 / 2, length(crsp) - 2)
print(ar1)
p.h = 0.0853
p.se = 0.0198
CI = c(p.h - q * p.se, p.h + q * p.se);CI
@

95\% confidence interval for $\phi$ for the AR(1) model is (0.04647411, 0.12412589).

\newpage
\item Problem 4 on page 356 in the textbook.


 (a)
$Var(Y_1) = \frac{\sigma_\epsilon^2}{(1-\phi^2)} = \frac{1.2}{(1-0.4^2)} = 1.42857$

\medskip

(b)
$Cov(Y_1,Y_2) = \sigma_Y\phi^1 = 1.42857*0.4 =0.57143 $

$Cov(Y_1,Y_3) = \sigma_Y\phi^2 = 1.42857*0.4^2 =0.22857 $


\medskip

(c)
\begin{align*}
    Var((Y_1+Y_2+Y_3)/2) =& \frac{1}{4}(Var(Y_1) + Var(Y_2) + Var(Y_3) + 2Cov(Y_1,Y_2)+\\
    & \,2Cov(Y_1,Y_3)+ 2Cov(Y_2,Y_3))\\
    =& \frac{1}{4}(3*1.42857+ 2*2*0.57143 + 2*0.22857)\\
    =& 1.75714
\end{align*}

\end{enumerate}


\end{document}